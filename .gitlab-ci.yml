variables:
  GITLAB_CI_IMAGE_DEBIAN: 'debian:buster'
  GITLAB_CI_APT_REPOSITORY: 'deb http://download.opensuse.org/repositories/home:/librespace:/satnogs/Debian_10/ /'
  GITLAB_CI_APT_KEY_URL: 'https://download.opensuse.org/repositories/home:librespace:satnogs/Debian_10/Release.key'
  GITLAB_CI_OBS_PROJECT: 'home:librespace:satnogs'
  GITLAB_CI_OBS_PROJECT_UNSTABLE: 'home:librespace:satnogs-unstable'
stages:
  - style
  - build
  - deploy

# 'style' stage
style:
  image: ${GITLAB_CI_IMAGE_DEBIAN}
  stage: style
  needs: []
  before_script:
    - apt-get -q update
    - apt-get -qy install astyle
  script:
    - 'astyle --dry-run --options=.astylerc --formatted lib/*.cc lib/*.h include/soapy/*.h  | sed ''s/^Formatted/ERROR: Unformatted/;T;q1'''

# 'build' stage
debian:
  stage: build
  needs: []
  image: ${GITLAB_CI_IMAGE_DEBIAN}
  before_script:
    - apt-get -q update
    - apt-get -qy install gnupg libcurl4 git
    - echo "$GITLAB_CI_APT_REPOSITORY" > /etc/apt/sources.list.d/${GITLAB_CI_OBS_PROJECT}.list
    - apt-key adv --fetch-keys "$GITLAB_CI_APT_KEY_URL"
    - apt-get -q update
    - apt-get -qy install devscripts git-buildpackage
  script:
    - mk-build-deps -i -r -t "apt-get -o Debug::pkgProblemResolver=yes --no-install-recommends -y"
    - PACKAGE_VERSION="$CI_COMMIT_TAG"
    - PACKAGE_VERSION="${PACKAGE_VERSION:-$(git describe --abbrev=8 2>/dev/null | tr '-' '+' || true)}"
    - PACKAGE_VERSION="${PACKAGE_VERSION#v}"
    - |
      [ -z "$PACKAGE_VERSION" ] || {
          dch -b -M -v "${PACKAGE_VERSION}-1" "Bump to version '${PACKAGE_VERSION}-1'"
          dch -r -m ""
      }
    - gbp buildpackage -us -uc --git-upstream-tag='HEAD' --git-ignore-branch --git-ignore-new
    - mkdir artifacts
    - cp -a ../*.{deb,debian.tar.xz,dsc,build,buildinfo,changes,orig.tar.gz} artifacts/
  artifacts:
    expire_in: 1 week
    when: always
    paths:
      - artifacts
openSUSE:
  stage: build
  needs: []
  image: opensuse/tumbleweed
  before_script:
    - >
      zypper in -y
      boost-devel
      libboost_filesystem-devel
      libboost_system-devel
      libboost_thread-devel
      libboost_program_options-devel
      libboost_regex-devel
      libboost_test-devel
      python3
      python3-six
      python3-devel
      swig
      cmake
      gcc-c++
      gcc
      soapy-sdr
      soapy-sdr-devel
      gnuradio
      gnuradio-devel
      gmp-devel
      libmpir-devel
      liborc-0_4-0
      orc
      log4cpp-devel
  script:
    - mkdir -p build
    - cd build
    - cmake -DCMAKE_INSTALL_PREFIX=/usr -DLIB_SUFFIX=64 -DCMAKE_BUILD_TYPE=RelWithDebInfo ..
    - make
    - make install
    - ldconfig
    - python3 -c "import soapy"
    - cd ..
ubuntu:
  stage: build
  needs: []
  image: ubuntu:18.04
  variables:
    DEBIAN_FRONTEND: noninteractive
  before_script:
    - apt-get -q update
    - apt-get -qy install software-properties-common
    - add-apt-repository ppa:gnuradio/gnuradio-releases
    - apt-get -q update
    - >
      apt-get -qy install
      libboost-dev
      libboost-date-time-dev
      libboost-filesystem-dev
      libboost-program-options-dev
      libboost-system-dev
      libboost-thread-dev
      libboost-regex-dev
      libboost-test-dev
      python3
      python3-six
      python3-dev
      swig
      cmake
      gcc
      gnuradio-dev
      libsoapysdr-dev
      libconfig++-dev
      libgmp-dev
      liborc-0.4-0
      liborc-0.4-dev
      liborc-0.4-dev-bin
      git
  script:
    - mkdir -p build
    - cd build
    - cmake -DCMAKE_INSTALL_PREFIX=/usr ..
    - make
    - make install
    - ldconfig
    - python3 -c "import soapy"
docs:
  stage: build
  needs: []
  image: ubuntu:18.04
  variables:
    DEBIAN_FRONTEND: noninteractive
  before_script:
    - apt-get -q update
    - apt-get -qy install software-properties-common
    - add-apt-repository -y ppa:gnuradio/gnuradio-releases
    - apt-get -q update
    - >
      apt-get -qy install
      libboost-dev
      libboost-date-time-dev
      libboost-filesystem-dev
      libboost-program-options-dev
      libboost-system-dev
      libboost-thread-dev
      libboost-regex-dev
      libboost-test-dev
      python3
      python3-six
      python3-dev
      doxygen
      swig
      cmake
      gcc
      gnuradio-dev
      libsoapysdr-dev
      libconfig++-dev
      libgmp-dev
      liborc-0.4-0
      liborc-0.4-dev
      liborc-0.4-dev-bin
      liblog4cpp5-dev
      git
  script:
    - mkdir -p build
    - cd build
    - cmake -DCMAKE_INSTALL_PREFIX=/usr ..
    - make install
    - ldconfig
    - python3 -c "import soapy"
    - make doxygen_target
  artifacts:
    expire_in: 1 week
    when: always
    paths:
      - build/docs/doxygen/html

# 'deploy' stage
deploy:
  stage: deploy
  image: ${GITLAB_CI_IMAGE_DEBIAN}
  before_script:
    - apt-get -q update
    - apt-get -qy install osc
  script:
    - |
      cat <<-EOF > ~/.oscrc
      [general]
      apiurl = https://api.opensuse.org
      [https://api.opensuse.org]
      user = $OBS_USER
      pass = $OBS_PASS
      EOF
    - |
      BASE_DIR="$(pwd)"
      OSC_WORKDIR="$BASE_DIR/osc_workdir"
      ARTIFACTS_DIR="$BASE_DIR/artifacts"
      DSC_FILENAME=$(basename $(ls "$ARTIFACTS_DIR"/*.dsc))
      PACKAGES="${DSC_FILENAME%%_*}${CI_COMMIT_TAG:+ ${DSC_FILENAME%.dsc}}"
      PROJECTS="${GITLAB_CI_OBS_PROJECT_UNSTABLE}${CI_COMMIT_TAG:+ ${GITLAB_CI_OBS_PROJECT}}"
      for package in $PACKAGES; do
          for project in $PROJECTS; do
              mkdir -p "$OSC_WORKDIR"
              cd "$OSC_WORKDIR"
              [ -d "$project" ] || osc co "$project"
              cd "$project"
              [ -d "$package" ] || osc mkpac "$package"
              rm -f "$package"/*.{dsc,debian.tar.xz,orig.tar.gz}
              cp -a "$ARTIFACTS_DIR"/*.{dsc,debian.tar.xz,orig.tar.gz} "$package"
              osc addremove -r
              osc ci -m "$DSC_FILENAME"
              cd "$BASE_DIR"
              rm -r "$OSC_WORKDIR"
          done
      done
  only:
    refs:
      - master
      - tags
    variables:
      - $OBS_USER
      - $OBS_PASS
pages:
  stage: deploy
  image: alpine
  script:
    - mv build/docs/doxygen/html/ public/
  artifacts:
    paths:
      - public
  only:
    refs:
      - tags
