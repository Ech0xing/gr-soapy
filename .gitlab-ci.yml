stages:
  - build
  - deploy
debian:
  stage: build
  image: debian:buster
  before_script:
    - apt-get update -qq
    - apt-get install -qq -y devscripts git-buildpackage
  script:
    - mk-build-deps -i -r -t "apt-get -o Debug::pkgProblemResolver=yes --no-install-recommends -y"
    - PACKAGE_VERSION="$CI_COMMIT_TAG"
    # Workaround for GitLab CI bug (see https://gitlab.com/gitlab-org/gitlab-ce/issues/61007)
    # On issue fix, replace with:
    # - PACKAGE_VERSION="${PACKAGE_VERSION:-$(git describe --abbrev=8 2>/dev/null | tr '-' '+' | cut -c '2-' || true)}"
    - PACKAGE_VERSION="${PACKAGE_VERSION:-0.0+1+g$CI_COMMIT_SHORT_SHA}"
    - PACKAGE_VERSION="${PACKAGE_VERSION#v}"
    - |
      [ -z "$PACKAGE_VERSION" ] || {
          dch -b -M -v "${PACKAGE_VERSION}-1" "Bump to version '${PACKAGE_VERSION}-1'"
          dch -r -m ""
      }
    - |
      [ -n "$CI_COMMIT_TAG" ] || sed -i '/0001-remove-git-maint-version.patch/ d' debian/patches/series
    - gbp buildpackage -us -uc --git-upstream-tag='HEAD' --git-ignore-branch --git-ignore-new
    - mkdir artifacts
    - cp -a ../*.{deb,debian.tar.xz,dsc,build,buildinfo,changes,orig.tar.gz} artifacts/
  artifacts:
    expire_in: 1 week
    when: always
    paths:
      - artifacts
suse:
  stage: build
  image: opensuse/tumbleweed
  before_script:
    - |
      zypper in -y \
          boost-devel \
          libboost_filesystem-devel \
          libboost_system-devel \
          cppunit-devel \
          python \
          python-devel \
          swig \
          cmake \
          gcc-c++ \
          gcc \
          soapy-sdr \
          soapy-sdr-devel \
          gnuradio \
          gnuradio-devel
  script:
    - mkdir -p build
    - cd build
    - cmake -DCMAKE_INSTALL_PREFIX=/usr -DLIB_SUFFIX=64 -DCMAKE_BUILD_TYPE=RelWithDebInfo ..
    - make
    - cd ..
ubuntu:
  stage: build
  image: ubuntu:18.04
  variables:
    DEBIAN_FRONTEND: noninteractive
  before_script:
    - apt-get update -qq -y
    - |
      apt-get install -q -y \
          libboost-dev \
          libboost-filesystem-dev \
          libboost-system-dev \
          libcppunit-dev \
          swig \
          cmake \
          gcc \
          gnuradio-dev \
          libsoapysdr-dev \
          libconfig++-dev \
          git
  script:
    - mkdir -p build
    - cd build
    - cmake ..
    - make
docs:
  stage: build
  image: ubuntu:18.04
  variables:
    DEBIAN_FRONTEND: noninteractive
  before_script:
    - apt-get update -qq -y
    - |
      apt-get install -q -y \
          libboost-dev \
          libboost-filesystem-dev \
          libboost-system-dev \
          doxygen \
          libcppunit-dev \
          swig \
          cmake \
          gcc \
          gnuradio-dev \
          libsoapysdr-dev \
          libconfig++-dev \
          git
  script:
    - mkdir -p build
    - cd build
    - cmake ..
    - make doxygen_target
  artifacts:
    expire_in: 1 week
    when: always
    paths:
      - build/docs/doxygen/html
  only:
    - master
pages:
  stage: deploy
  image: alpine
  script:
    - mv build/docs/doxygen/html/ public/
  artifacts:
    paths:
      - public
  only:
    - master
